name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        cache: 'true'
        install: 'true'

    - name: Setup tools with mise
      run: mise install

    - name: Generate cache key
      id: cache-key
      run: echo "key=${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT

    - name: Cache pnpm store
      uses: actions/cache@v4
      id: pnpm-cache
      with:
        path: ~/.local/share/pnpm/store
        key: ${{ steps.cache-key.outputs.key }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      if: steps.pnpm-cache.outputs.cache-hit != 'true'
      run: pnpm install --frozen-lockfile

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        cache: 'true'
        install: 'true'

    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ~/.local/share/pnpm/store
        key: ${{ needs.install.outputs.cache-key }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run Biome lint check
      run: pnpm run lint

  format:
    runs-on: ubuntu-latest
    needs: install
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        cache: 'true'
        install: 'true'

    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ~/.local/share/pnpm/store
        key: ${{ needs.install.outputs.cache-key }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run Biome format check
      run: pnpm run format

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        cache: 'true'
        install: 'true'

    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ~/.local/share/pnpm/store
        key: ${{ needs.install.outputs.cache-key }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build project
      run: pnpm run build

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        cache: 'true'
        install: 'true'

    - name: Cache pnpm store
      uses: actions/cache@v4
      with:
        path: ~/.local/share/pnpm/store
        key: ${{ needs.install.outputs.cache-key }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run tests
      run: pnpm test